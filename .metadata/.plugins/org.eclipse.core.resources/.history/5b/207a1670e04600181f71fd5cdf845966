package dao;

import java.sql.Timestamp;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import entities.Activity;
import entities.Activity_Users;

@Repository
public class ActivitiesDAO {
	@Autowired
	private JdbcTemplate jdbcTemplate;

	public int addItem(Activity objActivity) {
		String sql = "INSERT INTO activities(title,content,start_at,end_at,fee,limited,status)"
				+ " VALUES(?,?,?,?,?,?,?)";
		int result = jdbcTemplate.update(sql,
				new Object[] { objActivity.getTitle(), objActivity.getContent(), objActivity.getStart_at(), objActivity.getEnd_at(),
						 objActivity.getFee(), objActivity.getLimited(),
						objActivity.getStatus()});
		return result;
	}

	public List<Activity> getItems(int offset, int row_count) {
		String sql = "SELECT * FROM activities ORDER BY id LIMIT ?,?";
		return jdbcTemplate.query(sql, new Object[] { offset, row_count }, new BeanPropertyRowMapper<Activity>(Activity.class));
	}

	public int countItems() {
		String sql = " SELECT COUNT(id) FROM activities";
		return jdbcTemplate.queryForObject(sql, Integer.class);
	}

	public Activity getItem(int id) {
		String sql = " SELECT * FROM activities WHERE id = ?";
		return jdbcTemplate.queryForObject(sql, new Object[]{id}, new BeanPropertyRowMapper<Activity>(Activity.class));
	}

	public int delItem(int id){
		String sql = " DELETE FROM activities WHERE id = ?";
		return jdbcTemplate.update(sql, new Object[]{id});
	}

	public int editItem(Activity objActi) {
		String sql = " UPDATE activities SET title = ?, content = ?, start_at = ?, end_at = ?, fee = ?, limited = ? WHERE id = ?";
		return jdbcTemplate.update(sql,new Object[]{objActi.getTitle(),objActi.getContent(),objActi.getStart_at(),objActi.getEnd_at(),objActi.getFee(),objActi.getLimited(),objActi.getId()});
	}
	
	public List<Activity_Users> getItems(int id_activity){
		String sql = "SELECT user_activities.*,lastname,firstname,klass FROM user_activities JOIN users ON user_activities.id_user = users.id  WHERE id_activity = ?";
		return jdbcTemplate.query(sql, new Object[] {id_activity},new BeanPropertyRowMapper<Activity_Users>(Activity_Users.class));
	}

	public int getTotal() {
		String sql = "SELECT COUNT(*) FROM activities";
		return jdbcTemplate.queryForObject(sql, Integer.class);
	}

	public int setStatus(int id, int status) {
		String sql = " UPDATE activities SET status = ? WHERE id = ? ";
		return jdbcTemplate.update(sql, new Object[]{status,id});
	}

	public int finish(int id) {
		String sql = "UPDATE activities SET status = 2 WHERE id = ?";
		return jdbcTemplate.update(sql, new Object[]{id});
	}
	
	public List<Activity> getNewItems(int offset, int row_count) {
		String sql = "SELECT * FROM activities WHERE status = 1 ORDER BY id DESC LIMIT ?,?";
		return jdbcTemplate.query(sql,new Object[]{offset,row_count}, new BeanPropertyRowMapper<Activity>(Activity.class));
	}
	public int countNewItems(){
		String sql = "SELECT COUNT(id) FROM activities WHERE status = 1";
		return jdbcTemplate.queryForObject(sql, Integer.class);
	}
	public List<Activity> getNewItems() {
		String sql = "SELECT * FROM activities WHERE status = 1 ORDER BY id DESC";
		return jdbcTemplate.query(sql, new BeanPropertyRowMapper<Activity>(Activity.class));
	}

	public int registerEvent(int id, int id_user,Timestamp joined_at) {
		String sql = "INSERT INTO user_activities(id_user,id_activity,joined_at) VALUES(?,?,?)";
		return jdbcTemplate.update(sql,new Object[]{id_user,id,joined_at});
	}

	public int updateJoined(int i) {
		String sql = "UPDATE activities SET joined = joined + ?";
		return jdbcTemplate.update(sql,new Object[]{i});
	}
}
