package controller;

import java.security.Principal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import dao.ActivitiesDAO;
import dao.CategoriesDAO;
import dao.NewsDAO;
import dao.UsersDAO;
import entities.Activity;
import utils.SlugUtils;

@Controller
public class PublicActivitiesController {
	@Autowired
	private ActivitiesDAO activityDAO;
	@Autowired
	private NewsDAO newsDAO;
	@Autowired
	private CategoriesDAO catDAO;
	@Autowired
	private UsersDAO userDAO;
	@Autowired
	private SlugUtils slugUtils;
	@ModelAttribute
	public void addCommon(ModelMap modelMap,Principal principal){
		modelMap.addAttribute("lCat",catDAO.getItems());
		modelMap.addAttribute("slug",slugUtils);
		modelMap.addAttribute("chunhiem",userDAO.getAdmin());
		if(principal != null){
			modelMap.addAttribute("logged",userDAO.getItem(principal.getName()));
		}
	}
	
	@RequestMapping("/danh-sach-hoat-dong")
	public String index(ModelMap modelMap,@RequestParam(value="page", defaultValue="1") int page, @RequestParam(value="row_count", defaultValue="5")int row_count) {
		int offset = (page - 1) * row_count;
		modelMap.addAttribute("listActivities",activityDAO.getNewItems(offset,row_count));
		int total = (int)Math.ceil((float)activityDAO.countNewItems()/row_count);
		modelMap.addAttribute("total",total);
		modelMap.addAttribute("newList",newsDAO.getNewItems());
		return "public.activities.index";
	}
	@RequestMapping("/{slug}/{id}")
	public String detail(ModelMap modelMap,@PathVariable("id") int id){
		Activity activity = activityDAO.getItem(id);
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		Date start;
		Date end;
		try {
			start = sdf.parse(activity.getStart_at());
			end  = sdf.parse(activity.getEnd_at());
			activity.setStart_at(sdf.format(start));
			activity.setEnd_at(sdf.format(end));
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		modelMap.addAttribute("objActivity",activity);
		return "public.activities.detail";
	}
}
