package controller;

import java.security.Principal;
import java.sql.Timestamp;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import dao.UsersDAO;
import entities.User;

@Controller
public class AdminUsersController {
	@Autowired
	private UsersDAO userDAO;
	
	@ResponseBody
	public void addCommon(ModelMap modelMap, Principal principal){
		System.out.println(principal.getName());
		modelMap.addAttribute("principal", userDAO.getItem(principal.getName()));
	}
	
	@RequestMapping("/admin/users")
	public String index(Principal principal,ModelMap modelMap, @RequestParam(value="page", defaultValue="1") int page, @RequestParam(value="row_count", defaultValue="5")int row_count){
		int offset = (page - 1)*row_count;
		System.out.println("abc"+principal.getName());
		modelMap.addAttribute("listUsers",userDAO.getItems(offset,row_count));
		
		int total = (int)Math.ceil((float)userDAO.countItems()/row_count);
		
		modelMap.addAttribute("total", total);
		
		return "admin.users.index";
	}
	
	@RequestMapping("/admin/users/add")
	public String add(){
		return "admin.users.add";
	}
	
	@RequestMapping(value="/admin/users/add", method=RequestMethod.POST)
	public String add(@Valid @ModelAttribute("objUser") User user,BindingResult bindingResult){
		if(bindingResult.hasErrors()){
			return "admin.users.add";
		}
		if(userDAO.checkUserExist(user.getUsername()) > 0){
			return "redirect:/admin/users/add?msg=exist";
		}
		
		user.setCreated_at(new Timestamp(System.currentTimeMillis()));
		
		if(userDAO.addItem(user) > 0){
			return "redirect:/admin/users?msg=add-success";
		}
		return "redirect:/admin/users?msg=add-error";
	}
	
	@RequestMapping("/admin/users/edit/{id}")
	public String edit(ModelMap modelMap,@PathVariable("id")int id){
		modelMap.addAttribute("objUser",userDAO.getItem(id));
		return "admin.users.edit";
	}
	@RequestMapping(value="/admin/users/edit/{id}",method=RequestMethod.POST)
	public String edit(@PathVariable("id")int id, @RequestParam("password") String password, @RequestParam("role") String role){
		if(password.equalsIgnoreCase("")){
			password = userDAO.getItem(id).getPassword();
		}
		if((password.length()>=1 && password.length()<6) || password.length()>16){
			return "redirect:/admin/users/edit/"+id+"?msg=password-error";
		}
		if(userDAO.editItem(id,role,password)>0){
			return "redirect:/admin/users?msg=edit-success";
		}
		return "redirect:/admin/users?msg=edit-error";
	}
	@RequestMapping("/admin/users/del/{id}")
	public String del(@PathVariable("id")int id){
		if(userDAO.delItem(id)>0){
			return "redirect:/admin/users?msg=del-success";
		}
		return "redirect:/admin/users?msg=del-error";
	}
}
